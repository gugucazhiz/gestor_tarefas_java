import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TarefaService {
    @PersistenceContext
    private EntityManager em;

    public List<Tarefa> filtrar(FiltroTarefa filtro) {
        StringBuilder jpql = new StringBuilder("SELECT t FROM Tarefa t WHERE 1=1");
        Map<String, Object> parametros = new HashMap<>();

        // Filtro por número
        if (filtro.getNumero() != null) {
            jpql.append(" AND t.numero = :numero");
            parametros.put("numero", filtro.getNumero());
        }

        // Filtro por título/descrição (busca parcial)
        if (filtro.getTitulo() != null && !filtro.getTitulo().isEmpty()) {
            jpql.append(" AND LOWER(t.titulo) LIKE LOWER(:titulo)");
            parametros.put("titulo", "%" + filtro.getTitulo() + "%");
        }

        // Filtro por responsável
        if (filtro.getResponsavel() != null && !filtro.getResponsavel().isEmpty()) {
            jpql.append(" AND t.responsavel.nome = :responsavel");
            parametros.put("responsavel", filtro.getResponsavel());
        }

        // Filtro por situação
        if (filtro.getSituacao() != null && !filtro.getSituacao().isEmpty()) {
            jpql.append(" AND t.situacao = :situacao");
            parametros.put("situacao", filtro.getSituacao());
        }

        TypedQuery<Tarefa> query = em.createQuery(jpql.toString(), Tarefa.class);
        parametros.forEach(query::setParameter); // Aplica os parâmetros

        return query.getResultList();
    }
}